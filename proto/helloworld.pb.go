// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: helloworld.proto

package helloworld

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//----------------------------------------------------------
type EnviarLibroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Numero uint64 `protobuf:"varint,3,opt,name=numero,proto3" json:"numero,omitempty"`
	Libro  string `protobuf:"bytes,4,opt,name=libro,proto3" json:"libro,omitempty"`
}

func (x *EnviarLibroRequest) Reset() {
	*x = EnviarLibroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnviarLibroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnviarLibroRequest) ProtoMessage() {}

func (x *EnviarLibroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnviarLibroRequest.ProtoReflect.Descriptor instead.
func (*EnviarLibroRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{0}
}

func (x *EnviarLibroRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EnviarLibroRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnviarLibroRequest) GetNumero() uint64 {
	if x != nil {
		return x.Numero
	}
	return 0
}

func (x *EnviarLibroRequest) GetLibro() string {
	if x != nil {
		return x.Libro
	}
	return ""
}

type EnviarLibroReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnviarLibroReply) Reset() {
	*x = EnviarLibroReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnviarLibroReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnviarLibroReply) ProtoMessage() {}

func (x *EnviarLibroReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnviarLibroReply.ProtoReflect.Descriptor instead.
func (*EnviarLibroReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{1}
}

func (x *EnviarLibroReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//-----------------------------------------------------------
type EnviarLibroRequest2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EnviarLibroRequest2) Reset() {
	*x = EnviarLibroRequest2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnviarLibroRequest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnviarLibroRequest2) ProtoMessage() {}

func (x *EnviarLibroRequest2) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnviarLibroRequest2.ProtoReflect.Descriptor instead.
func (*EnviarLibroRequest2) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{2}
}

func (x *EnviarLibroRequest2) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *EnviarLibroRequest2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EnviarLibroReply2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnviarLibroReply2) Reset() {
	*x = EnviarLibroReply2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnviarLibroReply2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnviarLibroReply2) ProtoMessage() {}

func (x *EnviarLibroReply2) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnviarLibroReply2.ProtoReflect.Descriptor instead.
func (*EnviarLibroReply2) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{3}
}

func (x *EnviarLibroReply2) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

//-----------------------------------------------------------
type PropuestaRequestC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Propuesta  []string `protobuf:"bytes,1,rep,name=propuesta,proto3" json:"propuesta,omitempty"`
	Propuesta1 []string `protobuf:"bytes,2,rep,name=propuesta1,proto3" json:"propuesta1,omitempty"`
	Propuesta2 []string `protobuf:"bytes,3,rep,name=propuesta2,proto3" json:"propuesta2,omitempty"`
	Propuesta3 []string `protobuf:"bytes,4,rep,name=propuesta3,proto3" json:"propuesta3,omitempty"`
	Nombre     string   `protobuf:"bytes,5,opt,name=nombre,proto3" json:"nombre,omitempty"`
}

func (x *PropuestaRequestC) Reset() {
	*x = PropuestaRequestC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropuestaRequestC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropuestaRequestC) ProtoMessage() {}

func (x *PropuestaRequestC) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropuestaRequestC.ProtoReflect.Descriptor instead.
func (*PropuestaRequestC) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{4}
}

func (x *PropuestaRequestC) GetPropuesta() []string {
	if x != nil {
		return x.Propuesta
	}
	return nil
}

func (x *PropuestaRequestC) GetPropuesta1() []string {
	if x != nil {
		return x.Propuesta1
	}
	return nil
}

func (x *PropuestaRequestC) GetPropuesta2() []string {
	if x != nil {
		return x.Propuesta2
	}
	return nil
}

func (x *PropuestaRequestC) GetPropuesta3() []string {
	if x != nil {
		return x.Propuesta3
	}
	return nil
}

func (x *PropuestaRequestC) GetNombre() string {
	if x != nil {
		return x.Nombre
	}
	return ""
}

type PropuestaReplyC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distribucion1 []string `protobuf:"bytes,1,rep,name=distribucion1,proto3" json:"distribucion1,omitempty"`
	Distribucion2 []string `protobuf:"bytes,2,rep,name=distribucion2,proto3" json:"distribucion2,omitempty"`
	Distribucion3 []string `protobuf:"bytes,3,rep,name=distribucion3,proto3" json:"distribucion3,omitempty"`
	Tipo          int64    `protobuf:"varint,4,opt,name=tipo,proto3" json:"tipo,omitempty"`
}

func (x *PropuestaReplyC) Reset() {
	*x = PropuestaReplyC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropuestaReplyC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropuestaReplyC) ProtoMessage() {}

func (x *PropuestaReplyC) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropuestaReplyC.ProtoReflect.Descriptor instead.
func (*PropuestaReplyC) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{5}
}

func (x *PropuestaReplyC) GetDistribucion1() []string {
	if x != nil {
		return x.Distribucion1
	}
	return nil
}

func (x *PropuestaReplyC) GetDistribucion2() []string {
	if x != nil {
		return x.Distribucion2
	}
	return nil
}

func (x *PropuestaReplyC) GetDistribucion3() []string {
	if x != nil {
		return x.Distribucion3
	}
	return nil
}

func (x *PropuestaReplyC) GetTipo() int64 {
	if x != nil {
		return x.Tipo
	}
	return 0
}

//-----------------------------------------------------------
type DataRequestC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Distribucion []string `protobuf:"bytes,1,rep,name=distribucion,proto3" json:"distribucion,omitempty"`
	Bites        [][]byte `protobuf:"bytes,2,rep,name=bites,proto3" json:"bites,omitempty"`
	Numero       int64    `protobuf:"varint,3,opt,name=numero,proto3" json:"numero,omitempty"`
}

func (x *DataRequestC) Reset() {
	*x = DataRequestC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataRequestC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataRequestC) ProtoMessage() {}

func (x *DataRequestC) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataRequestC.ProtoReflect.Descriptor instead.
func (*DataRequestC) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{6}
}

func (x *DataRequestC) GetDistribucion() []string {
	if x != nil {
		return x.Distribucion
	}
	return nil
}

func (x *DataRequestC) GetBites() [][]byte {
	if x != nil {
		return x.Bites
	}
	return nil
}

func (x *DataRequestC) GetNumero() int64 {
	if x != nil {
		return x.Numero
	}
	return 0
}

type DataReplyC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estado string `protobuf:"bytes,1,opt,name=estado,proto3" json:"estado,omitempty"`
}

func (x *DataReplyC) Reset() {
	*x = DataReplyC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReplyC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReplyC) ProtoMessage() {}

func (x *DataReplyC) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReplyC.ProtoReflect.Descriptor instead.
func (*DataReplyC) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{7}
}

func (x *DataReplyC) GetEstado() string {
	if x != nil {
		return x.Estado
	}
	return ""
}

//-------------------------------------------------------------
type ListaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peticion string `protobuf:"bytes,1,opt,name=peticion,proto3" json:"peticion,omitempty"`
}

func (x *ListaRequest) Reset() {
	*x = ListaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaRequest) ProtoMessage() {}

func (x *ListaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaRequest.ProtoReflect.Descriptor instead.
func (*ListaRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{8}
}

func (x *ListaRequest) GetPeticion() string {
	if x != nil {
		return x.Peticion
	}
	return ""
}

type ListaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lista []string `protobuf:"bytes,1,rep,name=lista,proto3" json:"lista,omitempty"`
}

func (x *ListaReply) Reset() {
	*x = ListaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListaReply) ProtoMessage() {}

func (x *ListaReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListaReply.ProtoReflect.Descriptor instead.
func (*ListaReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{9}
}

func (x *ListaReply) GetLista() []string {
	if x != nil {
		return x.Lista
	}
	return nil
}

//-------------------------------------------------------------
type ChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Book string `protobuf:"bytes,1,opt,name=book,proto3" json:"book,omitempty"`
}

func (x *ChunkRequest) Reset() {
	*x = ChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkRequest) ProtoMessage() {}

func (x *ChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkRequest.ProtoReflect.Descriptor instead.
func (*ChunkRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{10}
}

func (x *ChunkRequest) GetBook() string {
	if x != nil {
		return x.Book
	}
	return ""
}

type ChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location []string `protobuf:"bytes,1,rep,name=location,proto3" json:"location,omitempty"`
}

func (x *ChunkReply) Reset() {
	*x = ChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkReply) ProtoMessage() {}

func (x *ChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkReply.ProtoReflect.Descriptor instead.
func (*ChunkReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{11}
}

func (x *ChunkReply) GetLocation() []string {
	if x != nil {
		return x.Location
	}
	return nil
}

//-------------------------------------------------------------
type DataChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filechunk string `protobuf:"bytes,1,opt,name=filechunk,proto3" json:"filechunk,omitempty"`
}

func (x *DataChunkRequest) Reset() {
	*x = DataChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunkRequest) ProtoMessage() {}

func (x *DataChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunkRequest.ProtoReflect.Descriptor instead.
func (*DataChunkRequest) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{12}
}

func (x *DataChunkRequest) GetFilechunk() string {
	if x != nil {
		return x.Filechunk
	}
	return ""
}

type DataChunkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitaso []byte `protobuf:"bytes,1,opt,name=bitaso,proto3" json:"bitaso,omitempty"`
}

func (x *DataChunkReply) Reset() {
	*x = DataChunkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChunkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunkReply) ProtoMessage() {}

func (x *DataChunkReply) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunkReply.ProtoReflect.Descriptor instead.
func (*DataChunkReply) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{13}
}

func (x *DataChunkReply) GetBitaso() []byte {
	if x != nil {
		return x.Bitaso
	}
	return nil
}

//-------------------------------------------------------------
type DataChunkRequest2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filechunk string `protobuf:"bytes,1,opt,name=filechunk,proto3" json:"filechunk,omitempty"`
}

func (x *DataChunkRequest2) Reset() {
	*x = DataChunkRequest2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChunkRequest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunkRequest2) ProtoMessage() {}

func (x *DataChunkRequest2) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunkRequest2.ProtoReflect.Descriptor instead.
func (*DataChunkRequest2) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{14}
}

func (x *DataChunkRequest2) GetFilechunk() string {
	if x != nil {
		return x.Filechunk
	}
	return ""
}

type DataChunkReply2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitaso []byte `protobuf:"bytes,1,opt,name=bitaso,proto3" json:"bitaso,omitempty"`
}

func (x *DataChunkReply2) Reset() {
	*x = DataChunkReply2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helloworld_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChunkReply2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunkReply2) ProtoMessage() {}

func (x *DataChunkReply2) ProtoReflect() protoreflect.Message {
	mi := &file_helloworld_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunkReply2.ProtoReflect.Descriptor instead.
func (*DataChunkReply2) Descriptor() ([]byte, []int) {
	return file_helloworld_proto_rawDescGZIP(), []int{15}
}

func (x *DataChunkReply2) GetBitaso() []byte {
	if x != nil {
		return x.Bitaso
	}
	return nil
}

var File_helloworld_proto protoreflect.FileDescriptor

var file_helloworld_proto_rawDesc = []byte{
	0x0a, 0x10, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x66,
	0x0a, 0x12, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x62, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x62, 0x72, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72,
	0x4c, 0x69, 0x62, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x45, 0x6e,
	0x76, 0x69, 0x61, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c,
	0x69, 0x62, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x50,
	0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x31, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x31, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x32, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x32, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x33, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x33, 0x12, 0x16,
	0x0a, 0x06, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x75,
	0x65, 0x73, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x31,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e,
	0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x63, 0x69, 0x6f, 0x6e, 0x32, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e, 0x33, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x70, 0x6f,
	0x22, 0x60, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x63, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x63, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x69, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x6f, 0x22, 0x24, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x65, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x22, 0x2a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x69,
	0x63, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x65, 0x74, 0x69,
	0x63, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x69, 0x73, 0x74, 0x61, 0x22, 0x22, 0x0a, 0x0c, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x28, 0x0a, 0x0a,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x28, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69,
	0x74, 0x61, 0x73, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x74, 0x61,
	0x73, 0x6f, 0x22, 0x31, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x29, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x74, 0x61,
	0x73, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x69, 0x74, 0x61, 0x73, 0x6f,
	0x32, 0xa6, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x45,
	0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x12, 0x1e, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69,
	0x62, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69,
	0x62, 0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x49,
	0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x1c, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x63, 0x0a, 0x0b, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x69, 0x64, 0x6f, 0x12, 0x54, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x69,
	0x61, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x32, 0x12, 0x1f, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69, 0x62, 0x72,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x1a, 0x1d, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x4c, 0x69, 0x62,
	0x72, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x32, 0xf9,
	0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x12, 0x5b, 0x0a, 0x1b, 0x45, 0x6e, 0x76, 0x69,
	0x61, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x43, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6c, 0x69, 0x7a, 0x61, 0x64, 0x6f, 0x12, 0x1d, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x1a, 0x1b, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a, 0x50, 0x65, 0x64, 0x69, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x50, 0x65, 0x64, 0x69, 0x72,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xa1, 0x01, 0x0a, 0x0a, 0x4c,
	0x69, 0x62, 0x72, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x45, 0x6e, 0x76,
	0x69, 0x61, 0x72, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x0c, 0x45, 0x6e, 0x76, 0x69, 0x61, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x32,
	0x12, 0x1d, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x1a,
	0x1b, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x22, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_helloworld_proto_rawDescOnce sync.Once
	file_helloworld_proto_rawDescData = file_helloworld_proto_rawDesc
)

func file_helloworld_proto_rawDescGZIP() []byte {
	file_helloworld_proto_rawDescOnce.Do(func() {
		file_helloworld_proto_rawDescData = protoimpl.X.CompressGZIP(file_helloworld_proto_rawDescData)
	})
	return file_helloworld_proto_rawDescData
}

var file_helloworld_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_helloworld_proto_goTypes = []interface{}{
	(*EnviarLibroRequest)(nil),  // 0: helloworld.EnviarLibroRequest
	(*EnviarLibroReply)(nil),    // 1: helloworld.EnviarLibroReply
	(*EnviarLibroRequest2)(nil), // 2: helloworld.EnviarLibroRequest2
	(*EnviarLibroReply2)(nil),   // 3: helloworld.EnviarLibroReply2
	(*PropuestaRequestC)(nil),   // 4: helloworld.PropuestaRequestC
	(*PropuestaReplyC)(nil),     // 5: helloworld.PropuestaReplyC
	(*DataRequestC)(nil),        // 6: helloworld.DataRequestC
	(*DataReplyC)(nil),          // 7: helloworld.DataReplyC
	(*ListaRequest)(nil),        // 8: helloworld.ListaRequest
	(*ListaReply)(nil),          // 9: helloworld.ListaReply
	(*ChunkRequest)(nil),        // 10: helloworld.ChunkRequest
	(*ChunkReply)(nil),          // 11: helloworld.ChunkReply
	(*DataChunkRequest)(nil),    // 12: helloworld.DataChunkRequest
	(*DataChunkReply)(nil),      // 13: helloworld.DataChunkReply
	(*DataChunkRequest2)(nil),   // 14: helloworld.DataChunkRequest2
	(*DataChunkReply2)(nil),     // 15: helloworld.DataChunkReply2
}
var file_helloworld_proto_depIdxs = []int32{
	0,  // 0: helloworld.Packet.EnviarLibro:input_type -> helloworld.EnviarLibroRequest
	12, // 1: helloworld.Packet.EnviarChunk:input_type -> helloworld.DataChunkRequest
	2,  // 2: helloworld.Distribuido.EnviarLibro2:input_type -> helloworld.EnviarLibroRequest2
	4,  // 3: helloworld.PropuestaCentralizado.EnviarPropuestaCentralizado:input_type -> helloworld.PropuestaRequestC
	8,  // 4: helloworld.PropuestaCentralizado.PedirLista:input_type -> helloworld.ListaRequest
	10, // 5: helloworld.PropuestaCentralizado.PedirChunks:input_type -> helloworld.ChunkRequest
	6,  // 6: helloworld.LibroDatas.EnviarLibroData:input_type -> helloworld.DataRequestC
	14, // 7: helloworld.LibroDatas.EnviarChunk2:input_type -> helloworld.DataChunkRequest2
	1,  // 8: helloworld.Packet.EnviarLibro:output_type -> helloworld.EnviarLibroReply
	13, // 9: helloworld.Packet.EnviarChunk:output_type -> helloworld.DataChunkReply
	3,  // 10: helloworld.Distribuido.EnviarLibro2:output_type -> helloworld.EnviarLibroReply2
	5,  // 11: helloworld.PropuestaCentralizado.EnviarPropuestaCentralizado:output_type -> helloworld.PropuestaReplyC
	9,  // 12: helloworld.PropuestaCentralizado.PedirLista:output_type -> helloworld.ListaReply
	11, // 13: helloworld.PropuestaCentralizado.PedirChunks:output_type -> helloworld.ChunkReply
	7,  // 14: helloworld.LibroDatas.EnviarLibroData:output_type -> helloworld.DataReplyC
	15, // 15: helloworld.LibroDatas.EnviarChunk2:output_type -> helloworld.DataChunkReply2
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_helloworld_proto_init() }
func file_helloworld_proto_init() {
	if File_helloworld_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_helloworld_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnviarLibroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnviarLibroReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnviarLibroRequest2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnviarLibroReply2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropuestaRequestC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropuestaReplyC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataRequestC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReplyC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChunkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChunkRequest2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helloworld_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChunkReply2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_helloworld_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_helloworld_proto_goTypes,
		DependencyIndexes: file_helloworld_proto_depIdxs,
		MessageInfos:      file_helloworld_proto_msgTypes,
	}.Build()
	File_helloworld_proto = out.File
	file_helloworld_proto_rawDesc = nil
	file_helloworld_proto_goTypes = nil
	file_helloworld_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PacketClient is the client API for Packet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PacketClient interface {
	EnviarLibro(ctx context.Context, opts ...grpc.CallOption) (Packet_EnviarLibroClient, error)
	EnviarChunk(ctx context.Context, in *DataChunkRequest, opts ...grpc.CallOption) (*DataChunkReply, error)
}

type packetClient struct {
	cc grpc.ClientConnInterface
}

func NewPacketClient(cc grpc.ClientConnInterface) PacketClient {
	return &packetClient{cc}
}

func (c *packetClient) EnviarLibro(ctx context.Context, opts ...grpc.CallOption) (Packet_EnviarLibroClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Packet_serviceDesc.Streams[0], "/helloworld.Packet/EnviarLibro", opts...)
	if err != nil {
		return nil, err
	}
	x := &packetEnviarLibroClient{stream}
	return x, nil
}

type Packet_EnviarLibroClient interface {
	Send(*EnviarLibroRequest) error
	Recv() (*EnviarLibroReply, error)
	grpc.ClientStream
}

type packetEnviarLibroClient struct {
	grpc.ClientStream
}

func (x *packetEnviarLibroClient) Send(m *EnviarLibroRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *packetEnviarLibroClient) Recv() (*EnviarLibroReply, error) {
	m := new(EnviarLibroReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *packetClient) EnviarChunk(ctx context.Context, in *DataChunkRequest, opts ...grpc.CallOption) (*DataChunkReply, error) {
	out := new(DataChunkReply)
	err := c.cc.Invoke(ctx, "/helloworld.Packet/EnviarChunk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PacketServer is the server API for Packet service.
type PacketServer interface {
	EnviarLibro(Packet_EnviarLibroServer) error
	EnviarChunk(context.Context, *DataChunkRequest) (*DataChunkReply, error)
}

// UnimplementedPacketServer can be embedded to have forward compatible implementations.
type UnimplementedPacketServer struct {
}

func (*UnimplementedPacketServer) EnviarLibro(Packet_EnviarLibroServer) error {
	return status.Errorf(codes.Unimplemented, "method EnviarLibro not implemented")
}
func (*UnimplementedPacketServer) EnviarChunk(context.Context, *DataChunkRequest) (*DataChunkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarChunk not implemented")
}

func RegisterPacketServer(s *grpc.Server, srv PacketServer) {
	s.RegisterService(&_Packet_serviceDesc, srv)
}

func _Packet_EnviarLibro_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PacketServer).EnviarLibro(&packetEnviarLibroServer{stream})
}

type Packet_EnviarLibroServer interface {
	Send(*EnviarLibroReply) error
	Recv() (*EnviarLibroRequest, error)
	grpc.ServerStream
}

type packetEnviarLibroServer struct {
	grpc.ServerStream
}

func (x *packetEnviarLibroServer) Send(m *EnviarLibroReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *packetEnviarLibroServer) Recv() (*EnviarLibroRequest, error) {
	m := new(EnviarLibroRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Packet_EnviarChunk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketServer).EnviarChunk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Packet/EnviarChunk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketServer).EnviarChunk(ctx, req.(*DataChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Packet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Packet",
	HandlerType: (*PacketServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnviarChunk",
			Handler:    _Packet_EnviarChunk_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EnviarLibro",
			Handler:       _Packet_EnviarLibro_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "helloworld.proto",
}

// DistribuidoClient is the client API for Distribuido service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DistribuidoClient interface {
	EnviarLibro2(ctx context.Context, opts ...grpc.CallOption) (Distribuido_EnviarLibro2Client, error)
}

type distribuidoClient struct {
	cc grpc.ClientConnInterface
}

func NewDistribuidoClient(cc grpc.ClientConnInterface) DistribuidoClient {
	return &distribuidoClient{cc}
}

func (c *distribuidoClient) EnviarLibro2(ctx context.Context, opts ...grpc.CallOption) (Distribuido_EnviarLibro2Client, error) {
	stream, err := c.cc.NewStream(ctx, &_Distribuido_serviceDesc.Streams[0], "/helloworld.Distribuido/EnviarLibro2", opts...)
	if err != nil {
		return nil, err
	}
	x := &distribuidoEnviarLibro2Client{stream}
	return x, nil
}

type Distribuido_EnviarLibro2Client interface {
	Send(*EnviarLibroRequest2) error
	Recv() (*EnviarLibroReply2, error)
	grpc.ClientStream
}

type distribuidoEnviarLibro2Client struct {
	grpc.ClientStream
}

func (x *distribuidoEnviarLibro2Client) Send(m *EnviarLibroRequest2) error {
	return x.ClientStream.SendMsg(m)
}

func (x *distribuidoEnviarLibro2Client) Recv() (*EnviarLibroReply2, error) {
	m := new(EnviarLibroReply2)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DistribuidoServer is the server API for Distribuido service.
type DistribuidoServer interface {
	EnviarLibro2(Distribuido_EnviarLibro2Server) error
}

// UnimplementedDistribuidoServer can be embedded to have forward compatible implementations.
type UnimplementedDistribuidoServer struct {
}

func (*UnimplementedDistribuidoServer) EnviarLibro2(Distribuido_EnviarLibro2Server) error {
	return status.Errorf(codes.Unimplemented, "method EnviarLibro2 not implemented")
}

func RegisterDistribuidoServer(s *grpc.Server, srv DistribuidoServer) {
	s.RegisterService(&_Distribuido_serviceDesc, srv)
}

func _Distribuido_EnviarLibro2_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DistribuidoServer).EnviarLibro2(&distribuidoEnviarLibro2Server{stream})
}

type Distribuido_EnviarLibro2Server interface {
	Send(*EnviarLibroReply2) error
	Recv() (*EnviarLibroRequest2, error)
	grpc.ServerStream
}

type distribuidoEnviarLibro2Server struct {
	grpc.ServerStream
}

func (x *distribuidoEnviarLibro2Server) Send(m *EnviarLibroReply2) error {
	return x.ServerStream.SendMsg(m)
}

func (x *distribuidoEnviarLibro2Server) Recv() (*EnviarLibroRequest2, error) {
	m := new(EnviarLibroRequest2)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Distribuido_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Distribuido",
	HandlerType: (*DistribuidoServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "EnviarLibro2",
			Handler:       _Distribuido_EnviarLibro2_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "helloworld.proto",
}

// PropuestaCentralizadoClient is the client API for PropuestaCentralizado service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PropuestaCentralizadoClient interface {
	EnviarPropuestaCentralizado(ctx context.Context, in *PropuestaRequestC, opts ...grpc.CallOption) (*PropuestaReplyC, error)
	PedirLista(ctx context.Context, in *ListaRequest, opts ...grpc.CallOption) (*ListaReply, error)
	PedirChunks(ctx context.Context, in *ChunkRequest, opts ...grpc.CallOption) (*ChunkReply, error)
}

type propuestaCentralizadoClient struct {
	cc grpc.ClientConnInterface
}

func NewPropuestaCentralizadoClient(cc grpc.ClientConnInterface) PropuestaCentralizadoClient {
	return &propuestaCentralizadoClient{cc}
}

func (c *propuestaCentralizadoClient) EnviarPropuestaCentralizado(ctx context.Context, in *PropuestaRequestC, opts ...grpc.CallOption) (*PropuestaReplyC, error) {
	out := new(PropuestaReplyC)
	err := c.cc.Invoke(ctx, "/helloworld.PropuestaCentralizado/EnviarPropuestaCentralizado", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propuestaCentralizadoClient) PedirLista(ctx context.Context, in *ListaRequest, opts ...grpc.CallOption) (*ListaReply, error) {
	out := new(ListaReply)
	err := c.cc.Invoke(ctx, "/helloworld.PropuestaCentralizado/PedirLista", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *propuestaCentralizadoClient) PedirChunks(ctx context.Context, in *ChunkRequest, opts ...grpc.CallOption) (*ChunkReply, error) {
	out := new(ChunkReply)
	err := c.cc.Invoke(ctx, "/helloworld.PropuestaCentralizado/PedirChunks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PropuestaCentralizadoServer is the server API for PropuestaCentralizado service.
type PropuestaCentralizadoServer interface {
	EnviarPropuestaCentralizado(context.Context, *PropuestaRequestC) (*PropuestaReplyC, error)
	PedirLista(context.Context, *ListaRequest) (*ListaReply, error)
	PedirChunks(context.Context, *ChunkRequest) (*ChunkReply, error)
}

// UnimplementedPropuestaCentralizadoServer can be embedded to have forward compatible implementations.
type UnimplementedPropuestaCentralizadoServer struct {
}

func (*UnimplementedPropuestaCentralizadoServer) EnviarPropuestaCentralizado(context.Context, *PropuestaRequestC) (*PropuestaReplyC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarPropuestaCentralizado not implemented")
}
func (*UnimplementedPropuestaCentralizadoServer) PedirLista(context.Context, *ListaRequest) (*ListaReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirLista not implemented")
}
func (*UnimplementedPropuestaCentralizadoServer) PedirChunks(context.Context, *ChunkRequest) (*ChunkReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PedirChunks not implemented")
}

func RegisterPropuestaCentralizadoServer(s *grpc.Server, srv PropuestaCentralizadoServer) {
	s.RegisterService(&_PropuestaCentralizado_serviceDesc, srv)
}

func _PropuestaCentralizado_EnviarPropuestaCentralizado_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PropuestaRequestC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropuestaCentralizadoServer).EnviarPropuestaCentralizado(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.PropuestaCentralizado/EnviarPropuestaCentralizado",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropuestaCentralizadoServer).EnviarPropuestaCentralizado(ctx, req.(*PropuestaRequestC))
	}
	return interceptor(ctx, in, info, handler)
}

func _PropuestaCentralizado_PedirLista_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropuestaCentralizadoServer).PedirLista(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.PropuestaCentralizado/PedirLista",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropuestaCentralizadoServer).PedirLista(ctx, req.(*ListaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PropuestaCentralizado_PedirChunks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChunkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PropuestaCentralizadoServer).PedirChunks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.PropuestaCentralizado/PedirChunks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PropuestaCentralizadoServer).PedirChunks(ctx, req.(*ChunkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PropuestaCentralizado_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.PropuestaCentralizado",
	HandlerType: (*PropuestaCentralizadoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnviarPropuestaCentralizado",
			Handler:    _PropuestaCentralizado_EnviarPropuestaCentralizado_Handler,
		},
		{
			MethodName: "PedirLista",
			Handler:    _PropuestaCentralizado_PedirLista_Handler,
		},
		{
			MethodName: "PedirChunks",
			Handler:    _PropuestaCentralizado_PedirChunks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld.proto",
}

// LibroDatasClient is the client API for LibroDatas service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LibroDatasClient interface {
	EnviarLibroData(ctx context.Context, in *DataRequestC, opts ...grpc.CallOption) (*DataReplyC, error)
	EnviarChunk2(ctx context.Context, in *DataChunkRequest2, opts ...grpc.CallOption) (*DataChunkReply2, error)
}

type libroDatasClient struct {
	cc grpc.ClientConnInterface
}

func NewLibroDatasClient(cc grpc.ClientConnInterface) LibroDatasClient {
	return &libroDatasClient{cc}
}

func (c *libroDatasClient) EnviarLibroData(ctx context.Context, in *DataRequestC, opts ...grpc.CallOption) (*DataReplyC, error) {
	out := new(DataReplyC)
	err := c.cc.Invoke(ctx, "/helloworld.LibroDatas/EnviarLibroData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libroDatasClient) EnviarChunk2(ctx context.Context, in *DataChunkRequest2, opts ...grpc.CallOption) (*DataChunkReply2, error) {
	out := new(DataChunkReply2)
	err := c.cc.Invoke(ctx, "/helloworld.LibroDatas/EnviarChunk2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibroDatasServer is the server API for LibroDatas service.
type LibroDatasServer interface {
	EnviarLibroData(context.Context, *DataRequestC) (*DataReplyC, error)
	EnviarChunk2(context.Context, *DataChunkRequest2) (*DataChunkReply2, error)
}

// UnimplementedLibroDatasServer can be embedded to have forward compatible implementations.
type UnimplementedLibroDatasServer struct {
}

func (*UnimplementedLibroDatasServer) EnviarLibroData(context.Context, *DataRequestC) (*DataReplyC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarLibroData not implemented")
}
func (*UnimplementedLibroDatasServer) EnviarChunk2(context.Context, *DataChunkRequest2) (*DataChunkReply2, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EnviarChunk2 not implemented")
}

func RegisterLibroDatasServer(s *grpc.Server, srv LibroDatasServer) {
	s.RegisterService(&_LibroDatas_serviceDesc, srv)
}

func _LibroDatas_EnviarLibroData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataRequestC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibroDatasServer).EnviarLibroData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.LibroDatas/EnviarLibroData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibroDatasServer).EnviarLibroData(ctx, req.(*DataRequestC))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibroDatas_EnviarChunk2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataChunkRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibroDatasServer).EnviarChunk2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.LibroDatas/EnviarChunk2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibroDatasServer).EnviarChunk2(ctx, req.(*DataChunkRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

var _LibroDatas_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.LibroDatas",
	HandlerType: (*LibroDatasServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EnviarLibroData",
			Handler:    _LibroDatas_EnviarLibroData_Handler,
		},
		{
			MethodName: "EnviarChunk2",
			Handler:    _LibroDatas_EnviarChunk2_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld.proto",
}
