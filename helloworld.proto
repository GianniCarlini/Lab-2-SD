syntax = "proto3";

package helloworld;


service Packet {
  rpc EnviarLibro (stream EnviarLibroRequest) returns (stream EnviarLibroReply) {} 
  rpc EnviarChunk (DataChunkRequest) returns (DataChunkReply) {}
}
service Distribuido {
  rpc EnviarLibro2 (stream EnviarLibroRequest2) returns (stream EnviarLibroReply2) {} 
  rpc EnviarPropuestaDistribuido (DistribuidoRequest) returns (DistribuidoReply) {}
  rpc Escribir (EscribirRequest) returns (EscribirReply) {}
  rpc PedirLista2 (ListaRequest2) returns (ListaReply2) {}
  rpc PedirChunks2 (ChunkRequest2) returns (ChunkReply2) {}
  rpc EnviarChunk3 (DataChunkRequestDist) returns (DataChunkReplyDist) {}
}
service PropuestaCentralizado {
  rpc EnviarPropuestaCentralizado (PropuestaRequestC) returns (PropuestaReplyC) {}
  rpc PedirLista (ListaRequest) returns (ListaReply) {}
  rpc PedirChunks (ChunkRequest) returns (ChunkReply) {}
}
service LibroDatas {
  rpc EnviarLibroData (DataRequestC) returns (DataReplyC) {}
  rpc EnviarChunk2 (DataChunkRequest2) returns (DataChunkReply2) {}
}
//----------------------------------------------------------
message EnviarLibroRequest {
    bytes id = 1;
    string name = 2;
    uint64 numero = 3;
    string libro = 4;
}

message EnviarLibroReply {
    string id = 1;
} 
//-----------------------------------------------------------
message EnviarLibroRequest2 {
    bytes id = 1;
    string name = 2;
    uint64 numero = 3;
    string libro = 4;
}

message EnviarLibroReply2 {
    string id = 1;
}
//-----------------------------------------------------------
message PropuestaRequestC {
    repeated string propuesta = 1;
    repeated string propuesta1 = 2;
    repeated string propuesta2 = 3;
    repeated string propuesta3 = 4;
    string nombre = 5;
}

message PropuestaReplyC {
    repeated string distribucion1 = 1;
    repeated string distribucion2 = 2;
    repeated string distribucion3 = 3;
    int64 tipo = 4;
}
//-----------------------------------------------------------
message DataRequestC {
    repeated string distribucion = 1;
    repeated bytes bites = 2;
    int64 numero = 3;
}

message DataReplyC {
   string estado = 1;
}
//-------------------------------------------------------------
message ListaRequest {
    string peticion = 1;
}

message ListaReply {
   repeated string lista = 1;
}
//-------------------------------------------------------------
message ChunkRequest {
    string book = 1;
}

message ChunkReply {
   repeated string location = 1;
}
//-------------------------------------------------------------
message DataChunkRequest {
    string filechunk = 1;
}

message DataChunkReply {
   bytes bitaso = 1;
}
//-------------------------------------------------------------
message DataChunkRequest2 {
    string filechunk = 1;
}

message DataChunkReply2 {
   bytes bitaso = 1;
}
//-------------------------------------------------------------
message DistribuidoRequest {
    repeated string propuestaini = 1;
    repeated bytes propuestaini1 = 2;
    repeated bytes propuestaini2 = 3;
    repeated bytes propuestaini3 = 4;
    int64 flag = 5;
    bool aceptada = 6;
}

message DistribuidoReply {
   string respuesta = 1;
}
//-----------------------------------------------------------
message EscribirRequest {
    repeated string propuesta = 1;
    repeated string propuesta1 = 2;
    repeated string propuesta2 = 3;
    repeated string propuesta3 = 4;
    string nombre = 5;
}

message EscribirReply {
    string estate = 1;
}
//-------------------------------------------------------------
message ListaRequest2 {
    string peticion2 = 1;
}

message ListaReply2 {
   repeated string lista2 = 1;
}
//-------------------------------------------------------------
message ChunkRequest2 {
    string book2 = 1;
}

message ChunkReply2 {
   repeated string location2 = 1;
}
//-------------------------------------------------------------
message DataChunkRequestDist {
    string filechunk2 = 1;
}

message DataChunkReplyDist {
   bytes bitaso2 = 1;
}